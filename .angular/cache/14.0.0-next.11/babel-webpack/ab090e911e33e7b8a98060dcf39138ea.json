{"ast":null,"code":"// siehe ts\\src\\core\\facade\\lang.ts\n\n/**\r\n * Ein Benutzernamen und ein Passwort werden zu einem String zusammengefasst und\r\n * dabei durch einen Doppelpunkt (:) getrennt. Dieser String wird\r\n * anschlie&szlig;end mit Base64 codiert. Das Ergebnis kann dann f&uuml;\r\n * BASIC-Authentifizierung verwendet werden.\r\n * http://stackoverflow.com/questions/34177221/angular2-how-to-inject-window-into-an-angular2-service\r\n * https://gist.github.com/gdi2290/f8a524cdfb1f54f1a59c\r\n * @param username Der Benutzername\r\n * @param password Das Passwort\r\n * @return Der mit Base64 codierte String.\r\n */\nexport const toBase64 = (username, password) => window.btoa(`${username}:${password}`); // In Angular durch Pipes wie z.B. currency oder percent\n// export const toEuro = (value: number) => {\n//     const options = {\n//         minimumIntegerDigits: 1,\n//         minimumFractionDigits: 2,\n//         maximumFractionDigits: 2,\n//         style: 'currency',\n//         currency: 'eur',\n//         currencyDisplay: 'symbol'\n//     }\n//     return new Intl.NumberFormat('de', options).format(value)\n// }\n//\n// export const toProzent(value: number) => {\n//     const options = {\n//         minimumIntegerDigits: 1,\n//         minimumFractionDigits: 1,\n//         maximumFractionDigits: 2,\n//         style: 'percent'\n//     }\n//     return new Intl.NumberFormat('de', options).format(value)\n// }","map":null,"metadata":{},"sourceType":"module"}