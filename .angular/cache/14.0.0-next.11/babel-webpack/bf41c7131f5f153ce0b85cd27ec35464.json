{"ast":null,"code":"import { APP_INITIALIZER } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HomeModule } from './home/home.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LayoutModule } from './layout/layout.module';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { SharedModule } from './shared/shared.module';\nimport { appInitializer } from './app.initializer';\nimport { authInterceptorProvider } from './auth/auth.interceptor';\nimport { environment } from '../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/service-worker\"; // https://angular.io/guide/roadmap\n// \"Application Root Module\" (= Einstiegsmodul):\n// Der Name \"AppModule\" ist per Konvention bzw. ng-cli festgelegt\n// Ein Modul enthaelt logisch zusammengehoerige Funktionalitaet\n// https://angular.io/guide/ngmodulesl\n// https://angular.io/guide/ngmodule-faq\n// https://angular.io/api/core/NgModule\n// https://blog.angular-university.io/angular2-ngmodule\n// https://itnext.io/understanding-angular-modules-5f1215130bc8\n\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {}\n\n  AppModule.ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)();\n  };\n\n  AppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [AppComponent]\n  });\n  AppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [{\n      // Aufruf waehrend der Initialisierung\n      provide: APP_INITIALIZER,\n      useFactory: appInitializer,\n      multi: true\n    }, authInterceptorProvider],\n    imports: [[ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n      // Register the ServiceWorker as soon as the app is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000'\n    }), AppRoutingModule, BrowserAnimationsModule, BrowserModule, HomeModule, HttpClientModule, LayoutModule, SharedModule // NICHT FahrradModule wegen Lazy Loading\n    ]]\n  });\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module"}