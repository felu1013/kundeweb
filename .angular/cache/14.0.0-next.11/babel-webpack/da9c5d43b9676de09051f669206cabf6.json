{"ast":null,"code":"import log from 'loglevel';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../auth/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\n\nfunction LoginLogoutComponent_form_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 2);\n    i0.ɵɵlistener(\"submit\", function LoginLogoutComponent_form_0_Template_form_submit_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onLogout());\n    });\n    i0.ɵɵelementStart(1, \"button\", 3)(2, \"span\", 4);\n    i0.ɵɵtext(3, \"Logout\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"i\", 5);\n    i0.ɵɵtext(5, \"chevron_right\");\n    i0.ɵɵelementEnd()()();\n  }\n}\n\nfunction LoginLogoutComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 2);\n    i0.ɵɵlistener(\"submit\", function LoginLogoutComponent_ng_template_2_Template_form_submit_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onLogin());\n    });\n    i0.ɵɵelementStart(1, \"div\", 6)(2, \"label\", 7)(3, \"small\");\n    i0.ɵɵtext(4, \"Benutzername\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"input\", 8);\n    i0.ɵɵlistener(\"ngModelChange\", function LoginLogoutComponent_ng_template_2_Template_input_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.username = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 6)(7, \"label\", 9)(8, \"small\");\n    i0.ɵɵtext(9, \"Passwort\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"input\", 10);\n    i0.ɵɵlistener(\"ngModelChange\", function LoginLogoutComponent_ng_template_2_Template_input_ngModelChange_10_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.password = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"div\", 6)(12, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function LoginLogoutComponent_ng_template_2_Template_button_click_12_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onLogin());\n    });\n    i0.ɵɵtext(13, \" Login \");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.username);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.password);\n  }\n}\n/**\r\n * Komponente f&uuml;r das Login mit dem Tag &lt;hs-login-logout&gt;.\r\n */\n\n\nexport class LoginLogoutComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    log.debug('LoginLogoutComponent.constructor()');\n  }\n\n  ngOnInit() {\n    log.debug('LoginLogoutComponent.ngOnInit: ', this.authService.isLoggedIn);\n    this.isLoggedIn$ = this.authService.isLoggedIn$;\n    this.isLoggedIn$.subscribe(); // Initialisierung, falls zwischenzeitlich der Browser geschlossen wurde\n\n    this.init = this.authService.isLoggedIn;\n  }\n\n  onLogin() {\n    log.debug('LoginLogoutComponent.onLogin()');\n\n    if (this.username === undefined || this.username === null) {\n      return;\n    }\n\n    const loginResult = this.authService.login(this.username, this.password);\n    this.init = false;\n    return loginResult;\n  }\n  /**\r\n   * Ausloggen und dabei Benutzername und Passwort zur&uuml;cksetzen.\r\n   */\n\n\n  onLogout() {\n    log.debug('LoginLogoutComponent.onLogout()');\n    this.authService.logout();\n    this.init = false;\n    this.isLoggedIn$.next(false);\n    return this.router.navigate(['/']);\n  }\n\n}\n\nLoginLogoutComponent.ɵfac = function LoginLogoutComponent_Factory(t) {\n  return new (t || LoginLogoutComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n};\n\nLoginLogoutComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginLogoutComponent,\n  selectors: [[\"hs-login-logout\"]],\n  decls: 4,\n  vars: 4,\n  consts: [[\"class\", \"row row-cols-md-auto g-3 align-items-center\", \"autocomplete\", \"off\", \"role\", \"form\", 3, \"submit\", 4, \"ngIf\", \"ngIfElse\"], [\"login\", \"\"], [\"autocomplete\", \"off\", \"role\", \"form\", 1, \"row\", \"row-cols-md-auto\", \"g-3\", \"align-items-center\", 3, \"submit\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"me-1\"], [1, \"material-icons\", \"md-48\"], [1, \"col-12\"], [\"for\", \"usernameInput\", 1, \"col-form-label\"], [\"id\", \"usernameInput\", \"type\", \"search\", \"tabindex\", \"1\", \"autocomplete\", \"off\", \"required\", \"\", \"name\", \"username\", 1, \"form-control\", \"form-control-sm\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"passwordInput\", 1, \"col-form-label\"], [\"id\", \"passwordInput\", \"type\", \"password\", \"tabindex\", \"2\", \"autocomplete\", \"off\", \"required\", \"\", \"name\", \"password\", 1, \"form-control\", \"form-control-sm\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", \"tabindex\", \"3\", 1, \"btn\", \"btn-primary\", \"btn-sm\", 3, \"click\"]],\n  template: function LoginLogoutComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, LoginLogoutComponent_form_0_Template, 6, 0, \"form\", 0);\n      i0.ɵɵpipe(1, \"async\");\n      i0.ɵɵtemplate(2, LoginLogoutComponent_ng_template_2_Template, 14, 2, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(3);\n\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 2, ctx.isLoggedIn$) || ctx.init)(\"ngIfElse\", _r1);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm, i3.AsyncPipe],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAIA,OAAOA,GAAP,MAAgB,UAAhB;;;;;;;;;;;ACFAC;AAIEA;AAAAA;AAAA;AAAA,aAAUA,iCAAV;AAAoB,KAApB;AAGAA,sCAGC,CAHD,EAGC,MAHD,EAGC,CAHD;AAIqBA;AAAMA;AACzBA;AAAgCA;AAAaA;;;;;;;;AAK/CA;AAIEA;AAAAA;AAAA;AAAA,aAAUA,gCAAV;AAAmB,KAAnB;AAEAA,mCAAoB,CAApB,EAAoB,OAApB,EAAoB,CAApB,EAAoB,CAApB,EAAoB,OAApB;AAEWA;AAAYA;AAErBA;AAOEA;AAAAA;AAAA;AAAA;AAAA;AAPFA;AAYFA,mCAAoB,CAApB,EAAoB,OAApB,EAAoB,CAApB,EAAoB,CAApB,EAAoB,OAApB;AAEWA;AAAQA;AAEjBA;AAOEA;AAAAA;AAAA;AAAA;AAAA;AAPFA;AAWFA,oCAAoB,EAApB,EAAoB,QAApB,EAAoB,EAApB;AAKIA;AAAAA;AAAA;AAAA,aAASA,gCAAT;AAAkB,KAAlB;AAEAA;AACFA;;;;;AA5BEA;AAAAA;AAgBAA;AAAAA;;;AD9CR;;;;;AAOA,OAAM,MAAOC,oBAAP,CAA2B;AAc7BC,cACqBC,WADrB,EAEqBC,MAFrB,EAEmC;AADd;AACA;AAEjBL,OAAG,CAACM,KAAJ,CAAU,oCAAV;AACH;;AAEDC,UAAQ;AACJP,OAAG,CAACM,KAAJ,CACI,iCADJ,EAEI,KAAKF,WAAL,CAAiBI,UAFrB;AAKA,SAAKC,WAAL,GAAmB,KAAKL,WAAL,CAAiBK,WAApC;AACA,SAAKA,WAAL,CAAiBC,SAAjB,GAPI,CASJ;;AACA,SAAKC,IAAL,GAAY,KAAKP,WAAL,CAAiBI,UAA7B;AACH;;AAEDI,SAAO;AACHZ,OAAG,CAACM,KAAJ,CAAU,gCAAV;;AACA,QAAI,KAAKO,QAAL,KAAkBC,SAAlB,IAA+B,KAAKD,QAAL,KAAkB,IAArD,EAA2D;AACvD;AACH;;AACD,UAAME,WAAW,GAAG,KAAKX,WAAL,CAAiBY,KAAjB,CAChB,KAAKH,QADW,EAEhB,KAAKI,QAFW,CAApB;AAIA,SAAKN,IAAL,GAAY,KAAZ;AACA,WAAOI,WAAP;AACH;AAED;;;;;AAGAG,UAAQ;AACJlB,OAAG,CAACM,KAAJ,CAAU,iCAAV;AACA,SAAKF,WAAL,CAAiBe,MAAjB;AACA,SAAKR,IAAL,GAAY,KAAZ;AACA,SAAKF,WAAL,CAAiBW,IAAjB,CAAsB,KAAtB;AACA,WAAO,KAAKf,MAAL,CAAYgB,QAAZ,CAAqB,CAAC,GAAD,CAArB,CAAP;AACH;;AAxD4B;;;mBAApBnB,sBAAoBD;AAAA;;;QAApBC;AAAoBoB;AAAAC;AAAAC;AAAAC;AAAAC;AAAA;ACXjCzB;;AAgBAA;;;;;;AAXGA,+EAAqC,UAArC,EAAqC0B,GAArC","names":["log","i0","LoginLogoutComponent","constructor","authService","router","debug","ngOnInit","isLoggedIn","isLoggedIn$","subscribe","init","onLogin","username","undefined","loginResult","login","password","onLogout","logout","next","navigate","selectors","decls","vars","consts","template","_r1"],"sourceRoot":"","sources":["C:\\Users\\luked\\Documents\\kundeweb\\src\\app\\layout\\header\\login-logout.component.ts","C:\\Users\\luked\\Documents\\kundeweb\\src\\app\\layout\\header\\login-logout.component.html"],"sourcesContent":["import { Component, type OnInit } from '@angular/core';\nimport { AuthService } from '../../auth/auth.service';\nimport { Subject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport log from 'loglevel';\n\n/**\n * Komponente f&uuml;r das Login mit dem Tag &lt;hs-login-logout&gt;.\n */\n@Component({\n    selector: 'hs-login-logout',\n    templateUrl: './login-logout.component.html',\n})\nexport class LoginLogoutComponent implements OnInit {\n    username: string | undefined;\n    password: string | undefined;\n\n    // Observable.subscribe() aus RxJS liefert ein Subscription Objekt,\n    // mit dem man den Request auch abbrechen (\"cancel\") kann\n    // https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/operators/subscribe.md\n    // http://stackoverflow.com/questions/34533197/what-is-the-difference-between-rx-observable-subscribe-and-foreach\n    // https://xgrommx.github.io/rx-book/content/observable/observable_instance_methods/subscribe.html\n    // Funktion als Funktionsargument, d.h. Code als Daten uebergeben\n    // Suffix \"$\" wird als \"Finnish Notation\" bezeichnet https://medium.com/@benlesh/observables-and-finnish-notation-df8356ed1c9b\n    isLoggedIn$!: Subject<boolean>;\n    init!: boolean;\n\n    constructor(\n        private readonly authService: AuthService,\n        private readonly router: Router,\n    ) {\n        log.debug('LoginLogoutComponent.constructor()');\n    }\n\n    ngOnInit() {\n        log.debug(\n            'LoginLogoutComponent.ngOnInit: ',\n            this.authService.isLoggedIn,\n        );\n\n        this.isLoggedIn$ = this.authService.isLoggedIn$;\n        this.isLoggedIn$.subscribe();\n\n        // Initialisierung, falls zwischenzeitlich der Browser geschlossen wurde\n        this.init = this.authService.isLoggedIn;\n    }\n\n    onLogin() {\n        log.debug('LoginLogoutComponent.onLogin()');\n        if (this.username === undefined || this.username === null) {\n            return;\n        }\n        const loginResult = this.authService.login(\n            this.username,\n            this.password,\n        );\n        this.init = false;\n        return loginResult;\n    }\n\n    /**\n     * Ausloggen und dabei Benutzername und Passwort zur&uuml;cksetzen.\n     */\n    onLogout() {\n        log.debug('LoginLogoutComponent.onLogout()');\n        this.authService.logout();\n        this.init = false;\n        this.isLoggedIn$.next(false);\n        return this.router.navigate(['/']);\n    }\n}\n","<!-- Inline form https://v5.getbootstrap.com/docs/5.0/forms/layout/#inline-forms -->\n<!-- prettier-ignore -->\n<form\n  class=\"row row-cols-md-auto g-3 align-items-center\"\n  autocomplete=\"off\"\n  role=\"form\"\n  (submit)=\"onLogout()\"\n  *ngIf=\"(isLoggedIn$ | async) || init; else login\"\n>\n  <button\n    type=\"submit\"\n    class=\"btn btn-primary\"\n  >\n    <span class=\"me-1\">Logout</span>\n    <i class=\"material-icons md-48\">chevron_right</i>\n  </button>\n</form>\n\n<ng-template #login>\n  <form\n    class=\"row row-cols-md-auto g-3 align-items-center\"\n    autocomplete=\"off\"\n    role=\"form\"\n    (submit)=\"onLogin()\"\n  >\n    <div class=\"col-12\">\n      <label for=\"usernameInput\" class=\"col-form-label\">\n        <small>Benutzername</small>\n      </label>\n      <input\n        id=\"usernameInput\"\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        tabindex=\"1\"\n        autocomplete=\"off\"\n        required\n        [(ngModel)]=\"username\"\n        name=\"username\"\n      />\n    </div>\n\n    <div class=\"col-12\">\n      <label for=\"passwordInput\" class=\"col-form-label\">\n        <small>Passwort</small>\n      </label>\n      <input\n        id=\"passwordInput\"\n        type=\"password\"\n        class=\"form-control form-control-sm\"\n        tabindex=\"2\"\n        autocomplete=\"off\"\n        required\n        [(ngModel)]=\"password\"\n        name=\"password\"\n      />\n    </div>\n    <div class=\"col-12\">\n      <button\n        type=\"submit\"\n        class=\"btn btn-primary btn-sm\"\n        tabindex=\"3\"\n        (click)=\"onLogin()\"\n      >\n        Login\n      </button>\n    </div>\n  </form>\n</ng-template>\n"]},"metadata":{},"sourceType":"module"}