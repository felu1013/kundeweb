{"ast":null,"code":"var _KundeReadService_instances, _KundeReadService_baseUrl, _KundeReadService_toKundeArrayOrError, _KundeReadService_toKundeOrError, _KundeReadService_suchkriterienToHttpParams, _KundeReadService_buildFindError;\n\nimport { __classPrivateFieldGet } from \"tslib\"; // eslint-disable-next-line @typescript-eslint/consistent-type-imports\n\nimport { HttpParams } from '@angular/common/http';\nimport { toKunde } from './kundeServer';\nimport { of } from 'rxjs';\nimport { catchError, first, map } from 'rxjs/operators';\nimport { FindError } from './errors';\nimport log from 'loglevel';\nimport { paths } from '../../shared';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n/**\r\n * Die Service Klasse zu Kunden wird zum \"Root Application Injector\"\r\n * hinzugefügt und ist in allen Klassen der Webanwendung verfügbar\r\n */\n\nexport class KundeReadService {\n  /**\r\n   * @param HttpClient injizierter Service HttpClient\r\n   * @return void\r\n   */\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n\n    _KundeReadService_instances.add(this);\n\n    _KundeReadService_baseUrl.set(this, paths.api);\n\n    log.debug('KundeReadService.constructor: baseUrl=', __classPrivateFieldGet(this, _KundeReadService_baseUrl, \"f\"));\n  }\n  /**\r\n   * Kunden anhand von Suchkriterien suchen\r\n   * @param suchkriterien Die Suchkriterien\r\n   * @returns gefundene Kunden oder Statuscode\r\n   */\n\n\n  find(suchkriterien = undefined) {\n    log.debug('KundeReadService.find: suchkriterien=', suchkriterien);\n\n    const url = __classPrivateFieldGet(this, _KundeReadService_baseUrl, \"f\");\n\n    log.debug('KundeReadService.find url=', url);\n\n    const params = __classPrivateFieldGet(this, _KundeReadService_instances, \"m\", _KundeReadService_suchkriterienToHttpParams).call(this, suchkriterien);\n\n    return this.httpClient.get(url, {\n      params\n    }).pipe(first(), // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    catchError((err, _$) => of(__classPrivateFieldGet(this, _KundeReadService_instances, \"m\", _KundeReadService_buildFindError).call(this, err))), map(restResult => __classPrivateFieldGet(this, _KundeReadService_instances, \"m\", _KundeReadService_toKundeArrayOrError).call(this, restResult)));\n  }\n  /**\r\n   * Ein Kunde anhad der ID suchen\r\n   * @param id Die Id des Kunden\r\n   */\n\n\n  findById(id) {\n    log.debug('KundeReadService.findById: id=', id);\n\n    if (id === undefined) {\n      log.debug('KundeReadService.findById: Keine Id');\n      return of(__classPrivateFieldGet(this, _KundeReadService_instances, \"m\", _KundeReadService_buildFindError).call(this));\n    }\n\n    const url = `${__classPrivateFieldGet(this, _KundeReadService_baseUrl, \"f\")}/${id}`;\n    log.debug('KundeReadService.findById: url=', url);\n    return this.httpClient\n    /* eslint-disable object-curly-newline */\n    .get(url, {\n      observe: 'response'\n    })\n    /* eslint-enable object-curly-newline */\n    .pipe(first(), // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    catchError((err, _$) => {\n      const errResponse = err;\n      return of(__classPrivateFieldGet(this, _KundeReadService_instances, \"m\", _KundeReadService_buildFindError).call(this, errResponse));\n    }), map(restResult => __classPrivateFieldGet(this, _KundeReadService_instances, \"m\", _KundeReadService_toKundeOrError).call(this, restResult)));\n  }\n\n}\n_KundeReadService_baseUrl = new WeakMap(), _KundeReadService_instances = new WeakSet(), _KundeReadService_toKundeArrayOrError = function _KundeReadService_toKundeArrayOrError(restResult) {\n  log.debug('KundeReadService.#toKundeArrayOrError: restResult=', restResult);\n\n  if (restResult instanceof FindError) {\n    return restResult;\n  } // eslint-disable-next-line no-underscore-dangle\n\n\n  const kunden = restResult._embedded.kunden.map(kundeServer => toKunde(kundeServer));\n\n  log.debug('KundeReadService.#toKundeArrayOrError: kunden=', kunden);\n  return kunden;\n}, _KundeReadService_toKundeOrError = function _KundeReadService_toKundeOrError(restResult) {\n  var _a;\n\n  if (restResult instanceof FindError) {\n    return restResult;\n  }\n\n  const {\n    body,\n    headers\n  } = restResult;\n\n  if (body === null) {\n    return __classPrivateFieldGet(this, _KundeReadService_instances, \"m\", _KundeReadService_buildFindError).call(this);\n  }\n\n  const etag = (_a = headers.get('ETag')) !== null && _a !== void 0 ? _a : undefined;\n  log.debug('KundeReadService.#toKundeOrError: etag=', etag);\n  const kunde = toKunde(body, etag);\n  return kunde;\n}, _KundeReadService_suchkriterienToHttpParams = function _KundeReadService_suchkriterienToHttpParams(suchkriterien) {\n  log.debug('KundeReadService.#suchkriterienToHttpParams: suchkriterien=', suchkriterien);\n  let httpParams = new HttpParams();\n\n  if (suchkriterien === undefined) {\n    return httpParams;\n  }\n\n  const {\n    nachname,\n    geschlecht\n  } = suchkriterien;\n\n  if (nachname !== '') {\n    httpParams = httpParams.set('nachname', nachname);\n  }\n\n  if (geschlecht !== '') {\n    httpParams = httpParams.set('geschlecht', geschlecht);\n  }\n\n  return httpParams;\n}, _KundeReadService_buildFindError = function _KundeReadService_buildFindError(err) {\n  if (err === undefined) {\n    return new FindError(-1);\n  }\n\n  if (err.error instanceof ProgressEvent) {\n    const msg = 'Client-seitiger oder Netzwerkfehler';\n    log.error(msg, err.error);\n    return new FindError(-1, err);\n  } // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\n\n  const {\n    status,\n    error\n  } = err;\n  log.debug('KundeReadService.#buildFindError: status / Response-Body=', status, error);\n  return new FindError(status, err);\n};\n\nKundeReadService.ɵfac = function KundeReadService_Factory(t) {\n  return new (t || KundeReadService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nKundeReadService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: KundeReadService,\n  factory: KundeReadService.ɵfac,\n  providedIn: 'root'\n});","map":null,"metadata":{},"sourceType":"module"}